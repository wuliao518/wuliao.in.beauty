package wuliao.in.beauty.dao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import wuliao.in.beauty.dao.User;
import wuliao.in.beauty.dao.Sbject;
import wuliao.in.beauty.dao.Source;

import wuliao.in.beauty.dao.UserDao;
import wuliao.in.beauty.dao.SbjectDao;
import wuliao.in.beauty.dao.SourceDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig userDaoConfig;
    private final DaoConfig sbjectDaoConfig;
    private final DaoConfig sourceDaoConfig;

    private final UserDao userDao;
    private final SbjectDao sbjectDao;
    private final SourceDao sourceDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        sbjectDaoConfig = daoConfigMap.get(SbjectDao.class).clone();
        sbjectDaoConfig.initIdentityScope(type);

        sourceDaoConfig = daoConfigMap.get(SourceDao.class).clone();
        sourceDaoConfig.initIdentityScope(type);

        userDao = new UserDao(userDaoConfig, this);
        sbjectDao = new SbjectDao(sbjectDaoConfig, this);
        sourceDao = new SourceDao(sourceDaoConfig, this);

        registerDao(User.class, userDao);
        registerDao(Sbject.class, sbjectDao);
        registerDao(Source.class, sourceDao);
    }
    
    public void clear() {
        userDaoConfig.getIdentityScope().clear();
        sbjectDaoConfig.getIdentityScope().clear();
        sourceDaoConfig.getIdentityScope().clear();
    }

    public UserDao getUserDao() {
        return userDao;
    }

    public SbjectDao getSbjectDao() {
        return sbjectDao;
    }

    public SourceDao getSourceDao() {
        return sourceDao;
    }

}
